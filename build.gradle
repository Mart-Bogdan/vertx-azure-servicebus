plugins {
    id 'java'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.7"
}




project.dependencies {
    compile("io.vertx:vertx-core:$vertxVersion")

    compile(group: 'com.microsoft.azure', name: 'applicationinsights-core', version: '1.+')
    compile(group: 'org.jboss.logging', name: 'jboss-logging', version: jbossLoggingVersion)
    compile(group: 'org.jboss.logging', name: 'jboss-logging-processor', version: jbossLoggingExtensionsVersion)
    compile(group: 'org.jboss.logging', name: 'jboss-logging-annotations', version: jbossLoggingExtensionsVersion)
    testCompile(group: 'com.microsoft.azure', name: 'azure-servicebus', version: '0.9.0')
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile "cglib:cglib-nodep:2.2.2"
}

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()   
    maven {
        name 'jboss'
        url 'http://repository.jboss.org/nexus/content/groups/public-jboss'
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('tb_user')
    key = System.getenv('tb_api_key')

    publications = ['mavenJava']
    dryRun = false
    publish = true
    pkg {
        repo = 'maven'
        userOrg = 'textback'
        name = project.name
        desc = project.description
        websiteUrl = 'https://textback.io'
        issueTrackerUrl = 'https://github.com/TextBack/vertx-azure-servicebus/issues'
        vcsUrl = 'https://github.com/TextBack/vertx-azure-servicebus'
        licenses = ['Apache-2.0']
        labels = ['vertx', 'azure', 'servicebus']
        publicDownloadNumbers = true
        //Optional version descriptor
        version {
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}